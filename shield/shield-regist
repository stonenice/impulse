#!/bin/bash

VERSION=1.0.0
ETCD_USER=XXX

declare -A opts=()
args_line=''

if [ $# -le 0 ]; then
    echo 'exec "shield-regist -h" for show helps'
fi

for arg in $*
do
    case "${arg}" in
        -v|--version)
            echo "shield-regist v${VERSION}"
        ;;
        -h|--help)
            echo 'shield-regist [options] app owner'
            echo '    arguments:'
            echo '        app      enter your application name'
            echo '        owner    the owner of application, just allows email at present.'
            echo '    options:'
            echo '        -v, --version    show version'
            echo '        -h, --help       show helps'
            echo '        --desc           simple description for your application'
        ;;
        --desc=*)
            opts['desc']=${arg##*=}
        ;;
        *)
            args_line="${args_line} ${arg}" 
        ;;
        
    esac
done

args=(${args_line})

app="${args[0]}"
owner="${args[1]}"


if [ ${#app} -le 0 ] || [[ ! $app =~ ^[a-zA-Z][a-zA-Z0-9-]+$ ]]; then
    echo "the app is wrong format."
    exit
fi


if [ ${#owner} -le 0 ] || [[ ! $owner =~ ^.+@.+$ ]]; then
    echo 'the owner is not a email'
    exit
fi

check_app=$(etcdctl --user=${ETCD_USER} get /application/${app}/name )

if [ ${#check_app} -gt 0 ]; then
    echo "'${app}' is already exist."
    exit
fi

set -v on
etcdctl --user=${ETCD_USER} put /application/${app}/name $app
etcdctl --user=${ETCD_USER} put /application/${app}/owner $owner
set -v off

result=$(etcdctl --user=${ETCD_USER} get /application/${app}/name )

if [ ${#result} -gt 0 ]; then
    echo "success to register ${app}"
else
    echo "fail to register ${app}"
fi
